---
swagger: '2.0'
info:
  title: Pyor API
  description: API to access worker and queue configuratons, register tasks, start
    them with given parameters and monitor the results.
  version: '1.0'
host: localhost:5000
basePath: "/api"
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  "/queues":
    get:
      summary: Retrieves one or more queues
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/max_results"
      - "$ref": "#/parameters/embedded"
      - "$ref": "#/parameters/sort"
      - "$ref": "#/parameters/where"
      - "$ref": "#/parameters/projection"
      responses:
        '200':
          description: An array of queues
          schema:
            type: array
            items:
              "$ref": "#/definitions/Queue"
      tags:
      - Queue
    post:
      summary: Stores one or more queues
      parameters:
      - in: body
        name: Queue
        required: true
        schema:
          "$ref": "#/definitions/Queue"
      responses:
        '201':
          description: operation has been successful
      tags:
      - Queue
  "/queues/{queueId}":
    get:
      summary: Retrieves a Queue document
      responses:
        '200':
          description: Queue document fetched successfully
          schema:
            "$ref": "#/definitions/Queue"
      parameters:
      - "$ref": "#/parameters/Queue__id"
      - "$ref": "#/parameters/embedded"
      tags:
      - Queue
    put:
      summary: Replaces a Queue document
      responses:
        '200':
          description: Queue document replaced successfully
      parameters:
      - "$ref": "#/parameters/Queue__id"
      - in: body
        name: Queue
        required: true
        schema:
          "$ref": "#/definitions/Queue"
      - in: header
        name: If-Match
        description: Current value of the _etag field
        required: true
        type: string
      tags:
      - Queue
    delete:
      summary: Deletes a Queue document
      responses:
        '204':
          description: Queue document deleted successfully
      parameters:
      - "$ref": "#/parameters/Queue__id"
      - in: header
        name: If-Match
        description: Current value of the _etag field
        required: true
        type: string
      tags:
      - Queue
  "/workers":
    get:
      summary: Retrieves one or more workers
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/max_results"
      - "$ref": "#/parameters/embedded"
      - "$ref": "#/parameters/sort"
      - "$ref": "#/parameters/where"
      - "$ref": "#/parameters/projection"
      responses:
        '200':
          description: An array of workers
          schema:
            type: array
            items:
              "$ref": "#/definitions/Worker"
      tags:
      - Worker
    post:
      summary: Stores one or more workers
      parameters:
      - in: body
        name: Worker
        required: true
        schema:
          "$ref": "#/definitions/Worker"
      responses:
        '201':
          description: operation has been successful
      tags:
      - Worker
  "/workers/{workerId}":
    get:
      summary: Retrieves a Worker document
      responses:
        '200':
          description: Worker document fetched successfully
          schema:
            "$ref": "#/definitions/Worker"
      parameters:
      - "$ref": "#/parameters/Worker__id"
      - "$ref": "#/parameters/embedded"
      tags:
      - Worker
    put:
      summary: Replaces a Worker document
      responses:
        '200':
          description: Worker document replaced successfully
      parameters:
      - "$ref": "#/parameters/Worker__id"
      - in: body
        name: Worker
        required: true
        schema:
          "$ref": "#/definitions/Worker"
      - in: header
        name: If-Match
        description: Current value of the _etag field
        required: true
        type: string
      tags:
      - Worker
    delete:
      summary: Deletes a Worker document
      responses:
        '204':
          description: Worker document deleted successfully
      parameters:
      - "$ref": "#/parameters/Worker__id"
      - in: header
        name: If-Match
        description: Current value of the _etag field
        required: true
        type: string
      tags:
      - Worker
  "/taskfiles":
    get:
      summary: Retrieves one or more taskfiles
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/max_results"
      - "$ref": "#/parameters/embedded"
      - "$ref": "#/parameters/sort"
      - "$ref": "#/parameters/where"
      - "$ref": "#/parameters/projection"
      responses:
        '200':
          description: An array of taskfiles
          schema:
            type: array
            items:
              "$ref": "#/definitions/Taskfile"
      tags:
      - Taskfile
    post:
      summary: Uploads script and auxiliar files, creating an TaskFiles register
      consumes:
        - multipart/form-data
      parameters:
      - in: formData
        name: script_file
        required: true
        type: file
        description: Python or R script
      - in: formData
        name: auxiliar_files
        required: false
        type: file
        description: Auxiliar files (may upload multiple files with the same field)
      responses:
        '201':
          description: operation has been successful
      tags:
      - Taskfile
  "/taskfiles/{taskfileId}":
    get:
      summary: Retrieves a Taskfile document
      responses:
        '200':
          description: Taskfile document fetched successfully
          schema:
            "$ref": "#/definitions/Taskfile"
      parameters:
      - "$ref": "#/parameters/Taskfile__id"
      - "$ref": "#/parameters/embedded"
      tags:
      - Taskfile
    delete:
      summary: Deletes a Taskfile document
      responses:
        '204':
          description: Taskfile document deleted successfully
      parameters:
      - "$ref": "#/parameters/Taskfile__id"
      - in: header
        name: If-Match
        description: Current value of the _etag field
        required: true
        type: string
      tags:
      - Taskfile
  "/tasks":
    get:
      summary: Retrieves one or more tasks
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/max_results"
      - "$ref": "#/parameters/embedded"
      - "$ref": "#/parameters/sort"
      - "$ref": "#/parameters/where"
      - "$ref": "#/parameters/projection"
      responses:
        '200':
          description: An array of tasks
          schema:
            type: array
            items:
              "$ref": "#/definitions/Task"
      tags:
      - Task
    post:
      summary: Stores one or more tasks
      parameters:
      - in: body
        name: Task
        required: true
        schema:
          "$ref": "#/definitions/Task"
      responses:
        '201':
          description: operation has been successful
      tags:
      - Task
  "/tasks/{taskId}":
    get:
      summary: Retrieves a Task document
      responses:
        '200':
          description: Task document fetched successfully
          schema:
            "$ref": "#/definitions/Task"
      parameters:
      - "$ref": "#/parameters/Task__id"
      - "$ref": "#/parameters/embedded"
      tags:
      - Task
    put:
      summary: Replaces a Task document
      responses:
        '200':
          description: Task document replaced successfully
      parameters:
      - "$ref": "#/parameters/Task__id"
      - in: body
        name: Task
        required: true
        schema:
          "$ref": "#/definitions/Task"
      - in: header
        name: If-Match
        description: Current value of the _etag field
        required: true
        type: string
      tags:
      - Task
    delete:
      summary: Deletes a Task document
      responses:
        '204':
          description: Task document deleted successfully
      parameters:
      - "$ref": "#/parameters/Task__id"
      - in: header
        name: If-Match
        description: Current value of the _etag field
        required: true
        type: string
      tags:
      - Task
  /taskfiles/{taskfileId}/tasks:
    get:
      summary: Retrieves one or more tasks
      parameters:
      - "$ref": "#/parameters/Taskfile__id"
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/max_results"
      - "$ref": "#/parameters/embedded"
      - "$ref": "#/parameters/sort"
      - "$ref": "#/parameters/where"
      - "$ref": "#/parameters/projection"
      responses:
        '200':
          description: An array of tasks
          schema:
            type: array
            items:
              "$ref": "#/definitions/Task"
      tags:
      - Task
  "/experiments":
    get:
      summary: Retrieves one or more experiments
      parameters:
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/max_results"
      - "$ref": "#/parameters/embedded"
      - "$ref": "#/parameters/sort"
      - "$ref": "#/parameters/where"
      - "$ref": "#/parameters/projection"
      responses:
        '200':
          description: An array of experiments
          schema:
            type: array
            items:
              "$ref": "#/definitions/Experiment"
      tags:
      - Experiment
    post:
      summary: Stores one or more experiments
      parameters:
      - in: body
        name: Experiment
        required: true
        schema:
          "$ref": "#/definitions/Experiment"
      responses:
        '201':
          description: operation has been successful
      tags:
      - Experiment
  "/experiments/{experimentId}":
    get:
      summary: Retrieves a Experiment document
      responses:
        '200':
          description: Experiment document fetched successfully
          schema:
            "$ref": "#/definitions/Experiment"
      parameters:
      - "$ref": "#/parameters/Experiment__id"
      - "$ref": "#/parameters/embedded"
      tags:
      - Experiment
    delete:
      summary: Deletes a Experiment document
      responses:
        '204':
          description: Experiment document deleted successfully
      parameters:
      - "$ref": "#/parameters/Experiment__id"
      - in: header
        name: If-Match
        description: Current value of the _etag field
        required: true
        type: string
      tags:
      - Experiment
  /tasks/{taskId}/experiments:
    get:
      summary: Retrieves one or more experiments from the given task
      parameters:
      - "$ref": "#/parameters/Task__id"
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/max_results"
      - "$ref": "#/parameters/embedded"
      - "$ref": "#/parameters/sort"
      - "$ref": "#/parameters/where"
      - "$ref": "#/parameters/projection"
      responses:
        '200':
          description: An array of experiments
          schema:
            type: array
            items:
              "$ref": "#/definitions/Experiment"
      tags:
      - Experiment
  /queues/{queueId}/experiments:
    get:
      summary: Retrieves one or more experiments from the given queue
      parameters:
      - "$ref": "#/parameters/Queue__id"
      - "$ref": "#/parameters/page"
      - "$ref": "#/parameters/max_results"
      - "$ref": "#/parameters/embedded"
      - "$ref": "#/parameters/sort"
      - "$ref": "#/parameters/where"
      - "$ref": "#/parameters/projection"
      responses:
        '200':
          description: An array of experiments
          schema:
            type: array
            items:
              "$ref": "#/definitions/Experiment"
      tags:
      - Experiment
definitions:
  Queue:
    type: object
    properties:
      name:
        type: string
      _id:
        "$ref": "#/definitions/Queue__id"
    required:
    - name
  Worker:
    type: object
    properties:
      name:
        type: string
      queues:
        type: array
        items:
          type: string
          format: objectid
      num_processes:
        minimum: 1
        type: integer
      _id:
        type: string
        format: objectid
    required:
    - name
  Taskfile:
    type: object
    properties:
      script_file:
        type: string
        description: "File's URL"
      auxiliar_files:
        type: array
        items:
          type: string
          description: "File's URL"
      _id:
        "$ref": "#/definitions/Taskfile__id"
  Task:
    type: object
    properties:
      name:
        type: string
      files:
        "$ref": "#/definitions/Taskfile__id"
      param_definitions:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              enum:
              - text
              - number
              - date
              - boolean
              type: string
          required:
          - name
          - type
      _id:
        "$ref": "#/definitions/Task__id"
    required:
    - name
  Experiment:
    type: object
    properties:
      task:
        "$ref": "#/definitions/Task__id"
      params:
        type: object
      queue:
        "$ref": "#/definitions/Queue__id"
      status:
        readOnly: true
        type: string
      result:
        readOnly: true
        type: object
      result_files:
        readOnly: true
        type: array
        items:
          type: string
          description: "File's URL"
      retry_count:
        readOnly: true
        type: integer
      date_received:
        readOnly: true
        type: string
        format: date-time
      date_started:
        readOnly: true
        type: string
        format: date-time
      date_last_update:
        readOnly: true
        type: string
        format: date-time
      date_done:
        readOnly: true
        type: string
        format: date-time
      traceback:
        readOnly: true
        type: string
      children:
        readOnly: true
        type: object
      progress:
        minimum: 0
        maximum: 1
        readOnly: true
        type: number
        format: float
      _id:
        type: string
        format: objectid
    required:
    - task
    - queue
  Taskfile__id:
    type: string
    format: objectid
  Task__id:
    type: string
    format: objectid
  Queue__id:
    type: string
    format: objectid
parameters:
  Queue__id:
    in: path
    name: queueId
    required: true
    description: ''
    type: string
    format: objectid
  Worker__id:
    in: path
    name: workerId
    required: true
    description: ''
    type: string
    format: objectid
  Taskfile__id:
    in: path
    name: taskfileId
    required: true
    description: ''
    type: string
    format: objectid
  Task__id:
    in: path
    name: taskId
    required: true
    description: ''
    type: string
    format: objectid
  Experiment__id:
    in: path
    name: experimentId
    required: true
    description: ''
    type: string
    format: objectid
  page:
    in: query
    name: page
    type: integer
    description: The page number
  max_results:
    in: query
    name: max_results
    type: integer
    description: The max number of results
  embedded:
    in: query
    name: embedded
    type: string
    description: 'Which fields with related resources should be embedded in the response. Must be provided in the form of {"field1": 1, "field2": 0}. See http://python-eve.org/features.html#embedded-resource-serialization for more information.'
  sort:
    in: query
    name: sort
    type: string
    description: 'Which fields should be use for sorting. The default order is ascending and the minus sign means descending. For example: sort=city,-lastname would sort by city (ascending) and lastname (descending). See http://python-eve.org/features.html#sorting for more information.'
  where:
    in: query
    name: where
    type: string
    description: 'Filters the registers by any given criteria. See http://python-eve.org/features.html#filters for more information.'
  projection:
    in: query
    name: projection
    type: string
    description: 'Decided which fields should be included or excluded from the response. Must be provided in the form of {"field1": 1, "field2": 1}. See http://python-eve.org/features.html#projections for more information.'
tags:
- name: Queue
- name: Worker
- name: Taskfile
- name: Task
- name: Experiment
